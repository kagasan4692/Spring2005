public class Exercise03 {
//    что такое область видимости переменной?:

//    Область видимости переменной — это часть программы, где переменная доступна для использования,
//    то есть где её можно читать и изменять. Область видимости определяет, какие части кода "видят" переменную,
//    и она зависит от того, где и как переменная объявлена.

//     Что происходит с переменной, после того, как начал выполняться код вне ее области видимости?:

//    Прекращение доступа к переменной: Переменная больше не доступна для чтения или изменения. Попытка обращения к ней
//    вне её области видимости приведет к ошибке компиляции, так как компилятор не может найти эту переменную.
//
//    Освобождение памяти (для локальных переменных): Если переменная была локальной (например, объявленной внутри метода или блока),
//    она автоматически "уничтожается" после выхода из этого блока или метода. В большинстве случаев, память,
//    занимаемая этой переменной, становится доступной для повторного использования.
//    В Java сборщик мусора (Garbage Collector) автоматически управляет памятью, поэтому память, выделенная для локальных переменных, освобождается, когда переменная становится недоступной.
//
//    Статус переменной: Переменная как таковая перестает существовать. Внутри метода или блока переменная имеет временную
//    область видимости и исчезает, когда программа выходит за её пределы. Если программа снова зайдет в тот же блок (например,
//    при следующей итерации цикла), переменная будет создана заново.


}
